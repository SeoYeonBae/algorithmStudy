package baekjoon;

import java.io.*;
import java.util.StringTokenizer;

public class Main_3109_빵집 {

	static int R, C, res, max;
	static char[][] map;
	static int[] dr = {-1, 0, 1};
	static int[] dc = {1, 1, 1};

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());

		map = new char[R][C];
		for (int i = 0; i < R; i++) {
			String s = br.readLine();
			for (int j = 0; j < C; j++) {
				map[i][j] = s.charAt(j);
			}
		}

		for(int i = 0; i < R; i++) {
			pipe(i, 0);
			
		}
		
		System.out.println(res);
	}

//	private static void pipe(int r, int c) {
//		int nr, nc;
//		
//		if(map[r][c] == '.') {
//			map[r][c] = '#';
//			for (int i = 0; i < R; i++) {
//				for (int j = 0; j < C; j++) {
//					System.out.print(map[i][j] + " ");
//				}
//				System.out.println();
//			}
//		}
//		else
//			return;
//
//		if(c == C - 1) {
//			res++;
//			return;
//		}
//		
//		for(int d = 0; d < 3; d++) {
//			nr = r + dr[d];
//			nc = c + dc[d];
//
//			if(nr < 0 || nr >= R || nc < 0 || nc >= C)
//				continue;
//
//			if(map[nr][nc] == '.')
//				pipe(nr, nc);
//		}
//	}
	private static void pipe(int r, int c) {
		int nr, nc;

		for(int d = 0; d < 3; d++) {
			nr = r + dr[d];
			nc = c + dc[d];

			if(nr < 0 || nr >= R || nc < 0 || nc >= C)
				continue;

			if(map[nr][nc] != '.')
				continue;

			map[nr][nc] = '#';
			for (int i = 0; i < R; i++) {
				for (int j = 0; j < C; j++) {
					System.out.print(map[i][j] + " ");
				}
				System.out.println();
			}
			if(nc == C - 1) {
				res++;
				return;
			}

			pipe(nr, nc);
		}
	}
}
